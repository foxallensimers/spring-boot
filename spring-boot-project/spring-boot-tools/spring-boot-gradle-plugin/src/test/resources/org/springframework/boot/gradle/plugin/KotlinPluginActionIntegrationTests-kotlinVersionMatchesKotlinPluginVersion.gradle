// this is necessary for the tests checking that we react correctly to the Kotlin plugin.
// Indeed, when using the plugins block to load the Boot plugin under test, relying on the plugin
// classpath set by the test kit gradle runner, the Boot plugin and the Kotlin plugin
// are loaded using two separate classloaders, and the Boot plugin thus doesn't see the Kotlin plugin
// class and can't react to it. To circumvent this test kit limitation, we set the classpath here.
buildscript {
	dependencies {
		classpath files(pluginClasspath.split(','))
	}
}

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.2.10'
}


apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
	resolutionStrategy {
		eachDependency {
			if (it.requested.group == 'org.springframework.boot') {
				it.useVersion project.bootVersion
			}
		}
	}
}

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
}

task kotlinVersion {
	doLast {
		def kotlinVersion = project.hasProperty('kotlin.version') ? project.getProperty('kotlin.version') : 'none'
		println "Kotlin version: ${kotlinVersion}"
	}
}
